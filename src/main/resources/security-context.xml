<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:sec="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security https://www.springframework.org/schema/security/spring-security-5.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
<!-- 주의 : 네임스페이스 security => sec로 수정 -->
	<!-- 정적 리소스 파일들에는 보안 설정을 하지 않음 -->
	<sec:http pattern="/include/**" security="none" />
	<sec:http pattern="/bootstrap/**" security="none" />
	<sec:http pattern="/resources/**" security="none" />
	<sec:http pattern="/android/**" security="none" />
	<sec:http auto-config="true" use-expressions="true" create-session="never">
		
		<!-- 관리자 영역 설정 -->
		<sec:intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')"/>
		<sec:intercept-url pattern="/student/**" access="hasAnyRole('ROLE_PROFESSOR', 'ROLE_ADMIN', 'ROLE_STUDENT')"/>
		<sec:intercept-url pattern="/professor/**" access="hasAnyRole('ROLE_PROFESSOR', 'ROLE_ADMIN')"/>
		
		<!-- 권한에 관계없이 접속 가능한 영역(guest도 접속 가능) -->
		<sec:intercept-url pattern="/guest/**" access="permitAll" />
		<sec:intercept-url pattern="/androidSignIn" access="permitAll" />
		<sec:intercept-url pattern="/androidMyPageMain" access="permitAll" />
		
		<!-- 로그인한 사용자 영역 -->
		<!-- <sec:intercept-url pattern="/**" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_GUEST', 'ROLE_MANAGER')" /> -->
	
		<!-- 로그인폼 -->
		<sec:form-login login-page="/guest/login" 
			login-processing-url="/guest/loginPro"
			authentication-success-handler-ref="userLoginSuccessHandler"
			authentication-failure-handler-ref="userLoginFailureHandler"
			username-parameter="userid" password-parameter="userpwd" />
	
		<sec:session-management>
			<!-- max-sessions="1" => 같은 브라우저의 여러 창에서 동시접속 막기 
			     expired-url="/user/login.do" => 세션 만료시 이동할 주소
			     error-if-maximum-exceeded="true" => 최대 세션 초과시 에러 옵션 
			-->
			<sec:concurrency-control max-sessions="1"
			 	expired-url="/guest/main"
			 	error-if-maximum-exceeded="true"
			/>        
		</sec:session-management>
		
		<!-- 접근 권한이 없는 경우의 코드 -->
		<sec:access-denied-handler ref="userDeniedHandler" />
	</sec:http>
	
	<bean id="userLoginSuccessHandler" class="com.kosmo.uni.service.UserLoginSuccessHandler" />
	<bean id="userLoginFailureHandler" class="com.kosmo.uni.service.UserLoginFailureHandler" />
	<bean id="userDeniedHandler" class="com.kosmo.uni.service.UserDeniedHandler" />
	
	<!-- 로그인 인증을 처리하는 빈 -->
	<!-- 주의 : 에러 => UserAuthenticationService에서 sqlSession을 매개변수 생성자에 주입하면 에러 사라짐  -->
	<bean id="userService" class="com.kosmo.uni.service.UserAuthenticationService">
		<constructor-arg name="sqlSession" ref="sqlSession" />
	</bean> 
	
	<!-- 비밀번호 암호화 빈 -->
	<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
</beans>